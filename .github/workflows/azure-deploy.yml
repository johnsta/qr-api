name: Deploy to Azure

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev/staging/prod)'
        required: true
        default: 'dev'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Set deployment variables
        run: |
          ENV_PREFIX=${{ github.event.inputs.environment || 'dev' }}
          RUN_ID=$(echo $GITHUB_RUN_ID | cut -c1-6)
          
          # Set environment-specific resource names
          if [[ "$ENV_PREFIX" == "prod" ]]; then
            echo "RESOURCE_GROUP=qrcode-api-rg-prod" >> $GITHUB_ENV
            echo "APP_NAME=qrcode-api-prod" >> $GITHUB_ENV
            echo "STORAGE_ACCOUNT_NAME=qrcodeapistorageprod" >> $GITHUB_ENV
          else
            echo "RESOURCE_GROUP=qrcode-api-rg-$ENV_PREFIX-$RUN_ID" >> $GITHUB_ENV
            echo "APP_NAME=qrcode-api-$ENV_PREFIX-$RUN_ID" >> $GITHUB_ENV
            echo "STORAGE_ACCOUNT_NAME=qrcode$ENV_PREFIX$RUN_ID" >> $GITHUB_ENV
          fi
          
          echo "LOCATION=eastus2" >> $GITHUB_ENV
          echo "PLAN_NAME=qrcode-api-plan-$ENV_PREFIX" >> $GITHUB_ENV
          echo "CONTAINER_NAME=qrcodes" >> $GITHUB_ENV
      
      - name: Make deploy script executable
        run: chmod +x ./deploy.sh
      
      - name: Run deployment script
        run: ./deploy.sh
        env:
          RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
          LOCATION: ${{ env.LOCATION }}
          PLAN_NAME: ${{ env.PLAN_NAME }}
          APP_NAME: ${{ env.APP_NAME }}
          STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
          CONTAINER_NAME: ${{ env.CONTAINER_NAME }}
      
      - name: Output App URL
        run: echo "Deployed to https://${{ env.APP_NAME }}.azurewebsites.net"
